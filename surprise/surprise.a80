		device	zxspectrum128

@DEBUG = 0

		include "../kernel/constants.inc"

;;-----------------------------------------------------------------------------
	macro border n
	  if DEBUG
	    if n > 0
		ld	a,n
	    else
		xor	a
	    endif
		out	(254),a
	  endif
	endm

	macro blik frames, place, color
		dw	frames + 0,	 place << 8 | color
		dw	frames + 8,	 place << 8 | 0
	endm

;;-----------------------------------------------------------------------------

		org	RUNZONE
		define	MUSIC.waitfor 2551

@attr_story = #6000

surprise:	ei
		ld	hl,attrs1
		ld	de,attrs1+1
		ld	bc,#5ff
		ld	(hl),l
		ldir

		ld	hl,attr_story_pak
		ld	de,attr_story
		call	depack

		xor	a
		ld	(actborder),a
		ld	a,$CD
		ld	(IMCALL),a
		ld	hl,surprise_rut
		ld	(IMCALL+1),hl

.loop:		ei
		halt
.color:		ld	a,0
.processor:	ld	bc,0
.citajscenar:	ld	hl,drawcube.table
		ld	a,(hl)
		or	a
		jr	z,finish
		ld	c,a
		inc	l
		ld	b,(hl)
		ex	hl,de
		ld	hl,(FRAMES)
		xor	a
		sbc	hl,bc
		jr	c,.loop
		ex	hl,de
		inc	l
		ld	c,(hl)
		inc	l
		ld	a,(hl)
		inc	l
		ld	(.citajscenar+1),hl
		rlca
		rlca
		rlca
		ld	e,a
		ld	d,0
		ld	hl,.jumpers
		add	hl,de
		ex	hl,de
		ld	hl,.processor+2
		ld	(hl),d
		dec	hl
		ld	(hl),e
		dec	hl
		ld	(hl),#CD
		dec	hl
		ld	(hl),c
		jr	.loop

finish:		xor	a
		ld	hl,IMCALL
		ld	(hl),a
		inc	l
		ld	(hl),a
		inc	l
		ld	(hl),a
		ld	a,#1D
		call	xchg.bnk
		halt
		di
		ld	(.retsp+1),sp
		ld	sp,#DB00
		ld	hl,#0707
		ld	b,32
.attrs:	dup 12
		push	hl
	edup
		djnz	.attrs
		ld	a,3
		ld	bc,#40FF
		ld	hl,0
		ld	de,0
.loop:	dup 4
		push	hl
	edup
	dup 8
		push	de
	edup
	dup 4
		push	hl
	edup
		djnz	.loop
		dec	a
		jr	z,.retsp
		ld	b,#40
		bit	0,a
		jr	nz,.loop-3
		ld	d,c
		ld	e,c
		jr	.loop

.retsp:		ld	sp,0
		ei
		ld	a,#10
		jp	xchg.bnk
; end

surprise.jumpers:
		jp	drawcube.reset
		ds	5

		ld	hl,attrs2+0
		ld	de,(attrs2+0)+128
		jr	drawcube

		ld	hl,attrs2+8
		ld	de,(attrs2+8)+128
		jr	drawcube

		ld	hl,attrs2+16
		ld	de,(attrs2+16)+128
		jr	drawcube

		ld	hl,attrs2+24
		ld	de,(attrs2+24)+128
		jr	drawcube

		ld	hl,attrs2+256
		ld	de,(attrs2+256)+128
		jr	drawcube

		ld	hl,attrs2+256+8
		ld	de,(attrs2+256+8)+128
		jr	drawcube

		ld	hl,attrs2+256+16
		ld	de,(attrs2+256+16)+128
		jr	drawcube

		ld	hl,attrs2+256+24
		ld	de,(attrs2+256+24)+128
		jr	drawcube

		ld	hl,attrs2+512
		ld	de,(attrs2+512)+128
		jr	drawcube

		ld	hl,attrs2+512+8
		ld	de,(attrs2+512+8)+128
		jr	drawcube

		ld	hl,attrs2+512+16
		ld	de,(attrs2+512+16)+128
		jr	drawcube

		ld	hl,attrs2+512+24
		ld	de,(attrs2+512+24)+128
		jr	drawcube

drawcube:	ld	bc,33 - 8
	dup 4
	dup 7
		ld	(hl),a
		ld	(de),a
		inc	l
		inc	e
	edup
		ld	(hl),a
		ld	(de),a
		add	hl,bc
		ex	hl,de
		add	hl,bc
	edup
		org	$-3
		or	a
		ret	nz
.reset:		inc	a
		ld	(surprise.processor),a
		ret

;; ----------------------------------------------------------------------------
surprise_rut:	ld	a,#AA
		rrca
		ld	(surprise_rut+1),a
		jp	c,flakejbarvy

		call	xchg.vram
		border	2
		ld	(.retsp+1),sp

.ptr_pattern:	ld	sp,pattern
		include "surprise.blitter.a80"
.retsp:		ld	sp,#3131
		border	0
		ret

;;~~~~~

flakejbarvy	border	2
		ld	a,(act128page)
		call	xchg.bnk+3

		ld	hl,attrs1
		ld	de,attrs2
		ld	bc,#D800
.loop0:		inc	l
	dup 30
		ld	a,(hl)
		dec	l
		ex	af,af'
		ld	a,(hl)
		or	a
		jr	nz,$+3
		ld	a,(de)
		ld	(bc),a
		ex	af,af'
		ld	(hl),a
		inc	l
		inc	l
		inc	e
		inc	c
	edup
		ld	a,(hl)
		dec	l
		ex	af,af'
		ld	a,(hl)
		or	a
		jr	nz,$+3
		ld	a,(de)
		ld	(bc),a
		ex	af,af'
		ld	(hl),a
		inc	l
		inc	e
		inc	c
		ld	a,(hl)
		or	a
		jr	nz,$+3
		ld	a,(de)
		ld	(bc),a
		inc	hl
		inc	de
		inc	bc
		ld	a,#DB
		cp	b
		jp	nz,.loop0

		border	5
		dec	hl
.ptr:		ld	de,attr_story
		ld	a,(de)
		or	a
		jr	z,.a
		cp	$ff
		jr	z,.q
		dec	a
		ld	(de),a
		jr	.storede+4

.q:		ld	bc,$0218 ;; jr $+4
		ld	(.storede),bc
		xor	a
.a:		ld	(hl),a
		ld	bc,-32
		add	hl,bc
		inc	de
	dup 22
		ld	a,(de)
		inc	de
		ld	(hl),a
		add	hl,bc
	edup
		ld	a,(de)
		inc	de
		ld	(hl),a
.storede:	ld	(.ptr+1),de

		border	3
.ypos:		ld	a,0
		inc	a
		ld	(.ypos+1),a
		ld	l,a
		ld	h,high sintab
		ld	a,(hl)
		and	63	; 62 ak bude predrotovana predloha ob-dva
		rlca
		rlca
		ld	bc,pattern
		ld	l,a
		ld	h,c
		add	hl,hl
		add	hl,hl
		add	hl,bc
		ld	(surprise_rut.ptr_pattern+1),hl
		border	0
		ret

attr_story_pak:	incbin "atributy.story.pak"


		align	256

drawcube.table:	blik	3300,  5, 011q
		blik	3322,  4, 044q
		blik	3344,  7, 122q
		blik	3366,  1, 166q
		blik	3388, 12, 033q
		blik	3410,  2, 111q
		blik	3432,  9, 022q
		blik	3454,  3, 055q
		blik	3476,  6, 133q
		blik	3498, 11, 066q
		blik	3520,  8, 155q
		blik	3542, 10, 144q
		blik	3564,  5, 122q
		dw	3586,  4 << 8 | 077q
		dw	3608,  7 << 8 | 077q
		dw	3630,  1 << 8 | 077q
		dw	3652, 12 << 8 | 077q
		dw	3674,  2 << 8 | 077q
		dw	3696,  9 << 8 | 077q
		dw	3718,  3 << 8 | 077q
		dw	3740,  6 << 8 | 077q
		dw	3762, 11 << 8 | 077q
		dw	3784,  8 << 8 | 077q
		dw	3785,  4 << 8
		dw	3806, 10 << 8 | 077q
		dw	3807,  1 << 8
		dw	3828,  5 << 8 | 077q
		dw	3829, 12 << 8
		dw	3850,  2 << 8
		dw	3872,  9 << 8
		dw	3894,  3 << 8
		dw	3916, 11 << 8
		dw	3938,  8 << 8
		dw	3960, 10 << 8
		dw	3982,  5 << 8
		dw	3999,0
		dw	0


		align	256

pattern		include "tables/pixeldata.a80"
sintab		incbin  "tables/sintab.bin"


		savebin "final.bin",surprise,$-surprise

attrs1		ds	768	; sinusovka
attrs2		ds	768	; farebny zaklad

;;-----------------------------------------------------------------------------
	ifndef isFX
		slot 3
		page 6

		include "../kernel/kernel.micro.inc"

		savesna "surprise.sna",microkernel
	endif
