		device	zxspectrum128

@DEBUG = 0

		include "../kernel/constants.inc"
		include "../ripple/rippleani.inc"
		include "../ripple/mandaly/build.inc"

;;-----------------------------------------------------------------------------
	macro border n
	  if DEBUG
	    if n > 0
		ld	a,n
	    else
		xor	a
	    endif
		ld	(actborder),a
		out	(254),a
	  endif
	endm

;;-----------------------------------------------------------------------------

		org	RUNZONE

		define	MUSIC.waitfor 5258

@start	ifndef isFX
		di
		ld	hl,#4000
		ld	de,#4001
		ld	bc,#1800
		ld	(hl),l
		ld	a,l
		ld	(actborder),a
		ldir
		ld	bc,#2FF
		ld	(hl),#47
		ldir
	endif
		ld	a,ripple.pg128k
		call	xchg.bnk

		call	mkbod

		ei
		halt
		ld	a,#CD
		ld	hl,callback
		ld	(IMCALL),a
		ld	(IMCALL+1),hl

		ld	hl,#5845
		ld	bc,#3642
.reglogo_red:	ld	(hl),c
		inc	l
		djnz	.reglogo_red

		ld	a,#64
		out	(mb02ram),a
		ld	hl,ripple.page1
		ld	de,0
		push	de
		call	depack
		ld	a,#65
		out	(mb02ram),a
		ld	hl,ripple.page2
		pop	de
		push	de
		call	depack
		ld	a,#66
		out	(mb02ram),a
		ld	hl,ripple.page3
		pop	de
		push	de
		call	depack
		ld	a,#67
		out	(mb02ram),a
		ld	hl,ripple.page4
		pop	de
		call	depack
		ld	hl,ripple.mandalas
		ld	de,mandala.start
		call	depack

deadloop:	ei
		halt
		ld	hl,(FRAMES)
		ld	bc,6238
		xor	a
		sbc	hl,bc
		jr	c,deadloop
		ret

callback:	call	draw
		jr	z,ukoncito
.reset1:	call	vyckavator
		call	draw
		jr	z,ukoncito
.reset2:	call	vyckavator
		call	draw
		jr	z,ukoncito
.reset3:	call	vyckavator
		call	draw
		jr	z,ukoncito
.reset4:	call	vyckavator
.reset5:	ld	bc,drawlogo
.reset6:	ld	bc,drawlogo
		call	drawlogo
		call	drawlogo
		jp	drawlogo

ukoncito:	ld	l,a
		ld	h,a
		inc	a
		ld	(IMCALL),a
		ld	(IMCALL+1),hl
		ld	a,l
		ld	(IMCALL),a
		ret

vyckavator:	ld	a,6
		dec	a
		ld	(vyckavator+1),a
		ret	nz
.counter:	ld	a,0
		inc	a
		ld	(.counter+1),a
		ld	hl,data
		cp	120
		jr	nz,.n1
		ld	(draw.ptr2+1),hl
		ret

.n1		cp	128
		jr	nz,.n2
		ld	(draw.ptr3+1),hl
		ret

.n2		cp	250
		jr	nz,.n3
		ld	(draw.ptr4+1),hl
		ld	a,1
		ld	(callback.reset1),a
		ld	(callback.reset2),a
		ld	(callback.reset3),a
		ld	(callback.reset4),a
		ld	a,#CD
		ld	(callback.reset5),a
		ld	(callback.reset6),a
		ld	hl,reglogo
		ld	(drawlogo+1),hl
		ld	a,#23
		ld	(drawlogo.dir),a
		ld	hl,0
		ld	(drawlogo.dir+1),hl
		ret

.n3		cp	150
		jr	nz,.n4
		ld	(draw.ptr1+1),hl
		ret

.n4		ld	a,6
		ld	(vyckavator+1),a
		ret

draw:		ld	lx,0
.ptr1:		ld	hl,data
		ld	c,(hl)
		inc	hl
		ld	b,(hl)
		inc	hl
		ld	a,b
		or	c
		jr	z,.ptr2
		ld	lx,a
		ld	(.ptr1+1),hl
		call	setbod

.ptr2:		ld	hl,dataend
		ld	c,(hl)
		inc	hl
		ld	b,(hl)
		inc	hl
		ld	a,b
		or	c
		jr	z,.ptr3
		ld	lx,a
		ld	(.ptr2+1),hl
		inc	c
		push	bc
		call	setbod
		pop	bc
		inc	b
		push	bc
		call	setbod
		pop	bc
		dec	c
		call	setbod

.ptr3:		ld	hl,dataend
		ld	c,(hl)
		inc	hl
		ld	b,(hl)
		inc	hl
		ld	a,b
		or	c
		jr	z,.ptr4
		ld	lx,a
		ld	(.ptr3+1),hl
		inc	c
		push	bc
		call	setbod
		pop	bc
		dec	c
		inc	b
		call	setbod

.ptr4:		ld	hl,dataend
		ld	c,(hl)
		inc	hl
		ld	b,(hl)
		inc	hl
		ld	a,b
		or	c
		jr	z,.finished
		ld	lx,a
		ld	(.ptr4+1),hl
;		push	bc
;		call	setbod
;		pop	bc
		inc	b
		inc	c
		call	setbod
.finished:	xor	a
		or	lx
		ret

drawlogo:	ld	hl,reglogend-2
		ld	c,(hl)
		inc	hl
		ld	b,(hl)
.dir		dec	hl
		dec	hl
		dec	hl
		ld	a,b
		or	c
		ret	z
		ld	(drawlogo+1),hl
		dec	b
setbod:		ld	h,high tabbod	; x = c, y = b
		ld	l,b
		ld	d,(hl)
		inc	h
		ld	a,(hl)
		inc	h
		ld	l,c
		or	(hl)
		ld	e,a
		inc	h
		ld	a,(de)
		xor	(hl)
		ld	(de),a
		ret

mkbod:		ld	ix,tabbod
		ld	hl,#4000
mkbb1:		ld	(ix+0),h
		inc	hx
		ld	(ix+0),l
		dec	hx
		call	downhl
		inc	lx
		jr	nz,mkbb1
		inc	hx
		inc	hx
mkbb2:		ld	a,lx
		rrca
		rrca
		rrca
		and	#1F
		ld	(ix+0),a
		ld	a,lx
		cpl
		add	a,a
		add	a,a
		add	a,a
		or	#C7
		ld	(mkbb3+1),a
		xor	a
mkbb3:		set	1,a
		inc	hx
		ld	(ix+0),a
		dec	hx
		inc	lx
		jr	nz,mkbb2
		ret

downhl:		inc	h
		ld	a,h
		and	7
		ret	nz
		ld	a,32
		add	a,l
		ld	l,a
		ret	c
		ld	a,#F8
		add	a,h
		ld	h,a
		ret

;;-----------------------------------------------------------------------------
data:		include	"tables/bodpath.a80"
dataend:	db	0,0

reglogo:	include	"tables/reglogo.a80"
reglogend:	db	0,0

		savebin "final.bin",start,$-start

;;-----------------------------------------------------------------------------
		align	256

tabbod		ds	1024

;;-----------------------------------------------------------------------------
	ifndef isFX
		slot 3
		page 6

	module ukernel
		include "../kernel/kernel.micro.inc"
	endmodule

		savesna "turndisk.sna",microkernel
	endif
